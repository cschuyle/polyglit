{"version":3,"sources":["images/popout-flat.png","Showcase.tsx","HomePage.tsx","reportWebVitals.ts","index.tsx"],"names":["Showcase","props","state","troveItems","displayedTroveItems","searchText","onlyDuplicates","this","fetchTrove","then","trove","console","log","items","length","setState","search","fetch","troveUrl","res","json","id","className","pageHeader","style","display","width","value","onChange","e","onSearchTextChanged","placeholder","marginLeft","float","type","onOnlyDuplicatesChanged","checked","map","troveItem","index","renderTroveItem","target","currentTarget","filter","troveItemMatches","searchByText","_","littlePrinceItem","language","toLowerCase","includes","title","searchByDuplicates","quantity","key","href","largeImageUrl","position","src","smallImageUrl","alt","files","file","renderExtraFile","right","margin","bottom","rel","popoutFlat","height","padding","marginTop","opacity","React","Component","HomePage","body","children","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","path","exact","component","textAlign","document","getElementById"],"mappings":"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","file":"static/js/main.ee7e76b0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/popout-flat.8676d87d.png\";","import React from 'react';\nimport popoutFlat from \"./images/popout-flat.png\"\n\ninterface TroveItem {\n    littlePrinceItem: {\n        title: string,\n        largeImageUrl: string,\n        language: string,\n        smallImageUrl: string,\n        format?: string,\n        illustrator?: string,\n        isbn13?: string,\n        narrator?: string,\n        \"publication-country\"?: string,\n        \"publication-location\"?: string,\n        publisher?: string,\n        quantity?: number,\n        translator?: string,\n        year?: string,\n        files?: string[]\n    }\n}\n\ninterface Trove {\n    id: string,\n    name: string,\n    shortName: string,\n    items: TroveItem[]\n}\n\ninterface ShowcaseState {\n    troveItems: TroveItem[],\n    displayedTroveItems: TroveItem[],\n    searchText: string\n    onlyDuplicates: boolean\n}\n\ninterface ShowcaseProps {\n    pageHeader: string\n    troveUrl: string\n}\n\nclass Showcase extends React.Component<ShowcaseProps, ShowcaseState> {\n\n    constructor(props: ShowcaseProps) {\n        super(props)\n        this.state = {\n            troveItems: [],\n            displayedTroveItems: [],\n            searchText: \"\",\n            onlyDuplicates: false\n        }\n    }\n\n    componentDidMount() {\n        this.fetchTrove().then(trove => {\n            console.log(`Got ${trove.items.length} Trove items`)\n            this.setState({troveItems: trove.items});\n            this.search(\"\", false)\n        })\n    }\n\n    fetchTrove() {\n        return fetch(this.props.troveUrl)\n            .then(res => {\n                return res.json() as Promise<Trove>\n            })\n    }\n\n    render() {\n        return (\n            <div id=\"main_content_wrap\" className=\"outer\">\n                <div id=\"main_content\" className=\"inner\">\n                    <h1>{this.props.pageHeader}</h1>\n                    <p>My collection, painstakingly acquired over the years.</p>\n\n                    <span>\n                        <div>\n                            <div style={{display: \"flex\"}}>\n                                <div style={{width: \"60%\"}}>\n                                    <input\n                                        style={{width: \"100%\"}}\n                                        value={this.state.searchText}\n                                        onChange={e => this.onSearchTextChanged(e)}\n                                        placeholder=\"Search by language, country, or title\"\n                                    />\n                                </div>\n                                <div style={{marginLeft: \"20px\"}}>\n                                    <div style={{float: \"left\"}}>\n                                        <input type=\"checkbox\"\n                                               onChange={e => this.onOnlyDuplicatesChanged(e)}\n                                               checked={this.state.onlyDuplicates}>\n                                        </input>\n                                    </div>\n                                    <label>Show only copies for which I have duplicates (want to make a deal?)</label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <section>\n                            Showing {this.state.displayedTroveItems.length} of {this.state.troveItems.length} editions of The Little Prince\n                        </section>\n                        <section className=\"column\">\n                            {\n                                this.state.displayedTroveItems.map((troveItem, index) => {\n                                    return this.renderTroveItem(troveItem, index)\n                                })\n                            }\n                        </section>\n                    </span>\n                </div>\n            </div>\n        );\n    }\n\n    private onSearchTextChanged(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            searchText: e.target.value\n        });\n        this.search(e.currentTarget.value, this.state.onlyDuplicates);\n    }\n\n    private onOnlyDuplicatesChanged(e: React.ChangeEvent<HTMLInputElement>) {\n        console.log(`only duplicates value is ${e.currentTarget.checked}`)\n        this.setState({\n            searchText: this.state.searchText,\n            onlyDuplicates: e.target.checked\n        });\n        this.search(this.state.searchText, e.currentTarget.checked);\n    }\n\n    private search(searchText: string, onlyDuplicates: boolean) {\n        this.setState({\n            displayedTroveItems: this.state.troveItems.filter(this.troveItemMatches(searchText, onlyDuplicates))\n        })\n    }\n\n    private troveItemMatches(searchText: string, onlyDuplicates: boolean) {\n\n        let searchByText = (_: TroveItem) => {\n            return true\n        }\n\n        if (searchText) {\n            searchByText = (troveItem) => {\n                return (\n                    troveItem.littlePrinceItem.language.toLowerCase().includes(searchText.toLowerCase()) ||\n                    troveItem.littlePrinceItem.title.toLowerCase().includes(searchText.toLowerCase()) ||\n                    troveItem.littlePrinceItem[\"publication-country\"]?.toLowerCase().includes(searchText.toLowerCase()) ||\n                    troveItem.littlePrinceItem[\"publication-location\"]?.toLowerCase().includes(searchText.toLowerCase())\n                ) || false\n            }\n        }\n\n        let searchByDuplicates = searchByText\n\n        if (onlyDuplicates) {\n            searchByDuplicates = troveItem => {\n                return searchByText(troveItem) && (troveItem.littlePrinceItem.quantity ?? 1) > 1\n            }\n        }\n\n        return searchByDuplicates\n    }\n\n    private renderTroveItem(troveItem: TroveItem, key: any) {\n        return <div className=\"thumbnail\" key={key}>\n            <a href={troveItem.littlePrinceItem.largeImageUrl}>\n                <div style={{position: \"relative\"}}>\n                    <img width=\"150\"\n                         src={troveItem.littlePrinceItem.smallImageUrl}\n                         title={troveItem.littlePrinceItem.title}\n                         alt={troveItem.littlePrinceItem.title}\n                    />\n                    <div className=\"caption\">{troveItem.littlePrinceItem.language}</div>\n                    {\n                        troveItem.littlePrinceItem.files?.map(file => {\n                            return this.renderExtraFile(file)\n                        })\n                    }\n                </div>\n            </a>\n        </div>\n    }\n\n    private renderExtraFile(file: string) {\n        return <div style={{\n            position: \"absolute\",\n            right: \"0px\",\n            margin: \"-0.8em 1em 0px\"\n        }}>\n\n            <span style={{bottom: \"0px\", right: \"0px\"}}>\n                <a href={file}\n                   target=\"_blank\"\n                   rel=\"noreferrer\">\n                    <img src={popoutFlat}\n                         title={`Open in new tab: ${file}`}\n                         alt=\"Open\"\n                         style={{\n                             height: \"1.3em\",\n                             width: \"1.3em\",\n                             padding: \"0.2em\",\n                             marginTop: \"0.2em\",\n                             float: \"left\",\n                             opacity: \"0.6\"\n                         }}\n                    />\n                </a>\n            </span>\n        </div>\n    }\n}\n\nexport default Showcase;\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown'\n\nclass HomePage extends React.Component {\n\n    body = `\n# TL; DR\n\n- [The Little Prince](./the-little-prince)\n- [The Hobbit](./the-hobbit)\n- [The Adventures of Alice in Wonderland](./alice-in-wonderland)\n\n# What's a Polyglit??\n\nThat's me being clever by abbreviating the phrase \"Polyglot Literature\".\n\nActually, it's not an abbreviation.  It's not even a contraction.  \nIt's a [portmanteau](https://en.wikipedia.org/wiki/Portmanteau)\n\n---\n\nThis site contains a summary of various works of literature that I've acquired over the years, in languages other \nthan my native one (which is English).\n\n\n## The Little Prince\n \n[The Little Prince](the-little-prince) is one of the most widely translated books around, so it only makes sense to \ncollect those.\n  \nGranted, this is not a particularly original endeavor - lots of folks collect this one.  A few that I've found:\n* [petit-prince-collection](http://www.petit-prince-collection.com/lang/traducteurs.php?lang=en)\n* [petit-prince.at](http://www.petit-prince.at/collection.htm)\n* [genius.com/Antoine-de-saint-exupery-collection-of-the-little-prince-editions-annotated](https://genius.com/Antoine-de-saint-exupery-collection-of-the-little-prince-editions-annotated) - Fairly complete looking list of editions, with metadata!\n* [malyksiaze.net](https://malyksiaze.net/en) - This one has a \"let's make a deal\" page\n\n## A couple other likely targets\n\nIf I'm in a store trying to find a book in language _X_, and can't find The Little Prince, \nI'll generally go for [The Hobbit](the-hobbit), or [Alice in Wonderland](alice-in-wonderland) (yes, I know that the actual title is _Alice's Adventures in Wonderland_).\n\n## Nope, try again\n\nFailing the above, I cast about for whatever I can find: Translations into local languages or local literature.\nI like to find children's books because it's easier to learn from them as a beginner.\nAnd of course, language learning materials.\nHere are the [foreign-language books](foreign-language-books) I've acquired.\n\n## Non-dead-tree options\n\nI also \"have\" some electronic-only material:\n\n* [Alice in Wonderland in Lojban](http://alis.lojban.org/) (or, [archived locally](alice-in-wonderland-in-lojban))\n* [The Little Prince in Esperanto](https://drive.google.com/file/d/0B9qESZHpLQVvZGRQRDl3VzIzakk/view)  (or, [archived locally](the-little-prince-in-esperanto/La%20eta%20princo.pdf))\n* [The Little Prince in Tamashek](the-little-prince-in-amazigh/the%20little%20prince%20in%20amazigh.pdf)\n* Various [translations of The Little Prince](http://www.laetaprinco.org/), including but not limited to:\n   * [Mandarin](http://www.laetaprinco.org/index.php?page=0&lang=cn)\n   * [Arabic](http://www.laetaprinco.org/index.php?page=0&lang=ar) (although on my computer there is a small number of missing characters in my font set)\n   \n## Translations are boring\n\nThe astute among you have noticed that all the above are translations.  \nSo, here are some books I've acquired over the years in their original language:\n* Das Kapital (German)\n* Le Petit Prince (French)\n* Mосква 2042 (Russian)\n* Embers (Hungarian)\n* 2666 (Spanish)\n* Kéraban le tétu (French)\n* Mais où sont passées les Indo Européens? (French)\n* Python для дітей (Ukrainian)\n* De ontdekking van de hemel (Dutch)\n* Распу́тин (Russian)\n* À la recherche du temps perdu (French)\n* La Possibilité d'une île (French)\n* 三体 (Mandarin)\n* Ciacole al pedocin (Triestese)\n* Évkönyv (Hungarian)\n* Innansveitarkronika (Icelandic)\n* Βίος και Πολιτεία του Αλέξη Ζορμπά (Greek)\n* Örtlich Betäubt (German)\n* Marvirinstrato (Esperanto) \n* Le capital au XXI<sup>e</sup> siècle`\n\n    render() {\n        return (\n            <div id=\"main_content_wrap\" className=\"outer\">\n                <section id=\"main_content\" className=\"inner\">\n                    <ReactMarkdown children={this.body}></ReactMarkdown>\n                </section>\n            </div>\n        )\n    }\n}\n\nexport default HomePage;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/index.css';\nimport './css/style.css';\nimport './css/image-grid.css';\nimport './css/polyglit.css';\nimport './css/Showcase.css';\n\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nimport Showcase from './Showcase';\nimport HomePage from './HomePage';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <div id=\"header_wrap\" className=\"outer\">\n            <header className=\"inner\">\n                <h1 id=\"project_title\">polyglit</h1>\n                <h2 id=\"project_tagline\">A collection of literary works in Lots of Languages</h2>\n            </header>\n        </div>\n\n        <Router basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route path=\"/\" exact component={() => <HomePage/>}/>\n                <Route path=\"/the-little-prince\" exact component={() =>\n                    <Showcase\n                        pageHeader=\"The Little Prince\"\n                        troveUrl={\"https://moocho-test.s3-us-west-2.amazonaws.com/public/little-prince\"}\n                    />}\n                />\n                <Route path=\"/the-hobbit\" exact component={() =>\n                    <Showcase\n                        pageHeader=\"The Hobbit\"\n                        troveUrl={\"https://moocho-test.s3-us-west-2.amazonaws.com/public/hobbit\"}\n                    />}\n                />\n                <Route path=\"/alice-in-wonderland\" exact component={() =>\n                    <Showcase\n                        pageHeader=\"Alice in Wonderland\"\n                        troveUrl={\"https://moocho-test.s3-us-west-2.amazonaws.com/public/alice-in-wonderland\"}\n                    />}\n                />\n            </Switch>\n        </Router>\n\n        <div id=\"footer_wrap\" className=\"outer\">\n            <footer className=\"inner\">\n                <p style={{textAlign: \"center\"}}>polyglit maintained by <a href=\"https://dragnon.com\">Carlton\n                    Schuyler</a></p>\n            </footer>\n        </div>\n\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}